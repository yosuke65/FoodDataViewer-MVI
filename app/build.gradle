apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.fooddataviewer_mvi"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testBuildType 'instrumented'

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        instrumented {
            initWith debug
            applicationIdSuffix '.instrumented'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "androidx.core:core-ktx:$androidXVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"

    implementation "com.google.android.material:material:$materialVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxbindingVersion"

    implementation "com.spotify.mobius:mobius-core:$mobiusVersion"
    implementation "com.spotify.mobius:mobius-rx2:$mobiusVersion"
    implementation "com.spotify.mobius:mobius-android:$mobiusVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    implementation "com.google.firebase:firebase-ml-vision:$visionVersion"

    implementation "io.fotoapparat:fotoapparat:$fotoapparatVersion"

    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    implementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    instrumentedImplementation "androidx.test:core:$testingVersion"
    instrumentedImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    instrumentedImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
}

apply plugin: 'com.google.gms.google-services'